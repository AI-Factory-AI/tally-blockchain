{"abi":[{"type":"function","name":"addBallot","inputs":[{"name":"_title","type":"string","internalType":"string"},{"name":"_description","type":"string","internalType":"string"},{"name":"_isMultipleChoice","type":"bool","internalType":"bool"},{"name":"_ipfsCid","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addElectionMetadata","inputs":[{"name":"_electionMetadataUri","type":"string","internalType":"string"},{"name":"_ballotMetadataUri","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addVoter","inputs":[{"name":"_voterAddress","type":"address","internalType":"address"},{"name":"_voterId","type":"string","internalType":"string"},{"name":"_voteWeight","type":"uint256","internalType":"uint256"},{"name":"_voterKeyHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addVoters","inputs":[{"name":"_voterAddresses","type":"address[]","internalType":"address[]"},{"name":"_voterIds","type":"string[]","internalType":"string[]"},{"name":"_voteWeights","type":"uint256[]","internalType":"uint256[]"},{"name":"_ipfsCid","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"castVote","inputs":[{"name":"_voterId","type":"string","internalType":"string"},{"name":"_choices","type":"bytes32[]","internalType":"bytes32[]"},{"name":"_ipfsCid","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"castVoteWithKey","inputs":[{"name":"_voterId","type":"string","internalType":"string"},{"name":"_voterKeyHash","type":"bytes32","internalType":"bytes32"},{"name":"_choices","type":"bytes32[]","internalType":"bytes32[]"},{"name":"_ipfsCid","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"castVoteWithPaymaster","inputs":[{"name":"_voterId","type":"string","internalType":"string"},{"name":"_voterKeyHash","type":"bytes32","internalType":"bytes32"},{"name":"_choices","type":"bytes32[]","internalType":"bytes32[]"},{"name":"_ipfsCid","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"changeElectionStatus","inputs":[{"name":"_newStatus","type":"uint8","internalType":"enum IElection.ElectionStatus"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteElection","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setElectionUrl","inputs":[{"name":"_electionUrl","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setPaymaster","inputs":[{"name":"_paymaster","type":"address","internalType":"address"},{"name":"_authorized","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addBallot(string,string,bool,string)":"d8d4d929","addElectionMetadata(string,string)":"777d31b3","addVoter(address,string,uint256,bytes32)":"aa98e851","addVoters(address[],string[],uint256[],string)":"221206b6","castVote(string,bytes32[],string)":"1a45cde1","castVoteWithKey(string,bytes32,bytes32[],string)":"10e60d4d","castVoteWithPaymaster(string,bytes32,bytes32[],string)":"ef97e126","changeElectionStatus(uint8)":"73da71d2","deleteElection()":"33be940d","setElectionUrl(string)":"489e4245","setPaymaster(address,bool)":"1573f688"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_isMultipleChoice\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"_ipfsCid\",\"type\":\"string\"}],\"name\":\"addBallot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_electionMetadataUri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ballotMetadataUri\",\"type\":\"string\"}],\"name\":\"addElectionMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voterAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_voterId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_voteWeight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_voterKeyHash\",\"type\":\"bytes32\"}],\"name\":\"addVoter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_voterAddresses\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"_voterIds\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_voteWeights\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"_ipfsCid\",\"type\":\"string\"}],\"name\":\"addVoters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_voterId\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"_choices\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"_ipfsCid\",\"type\":\"string\"}],\"name\":\"castVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_voterId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_voterKeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_choices\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"_ipfsCid\",\"type\":\"string\"}],\"name\":\"castVoteWithKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_voterId\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_voterKeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"_choices\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"_ipfsCid\",\"type\":\"string\"}],\"name\":\"castVoteWithPaymaster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IElection.ElectionStatus\",\"name\":\"_newStatus\",\"type\":\"uint8\"}],\"name\":\"changeElectionStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteElection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_electionUrl\",\"type\":\"string\"}],\"name\":\"setElectionUrl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_paymaster\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_authorized\",\"type\":\"bool\"}],\"name\":\"setPaymaster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the election contract\",\"kind\":\"dev\",\"methods\":{\"addBallot(string,string,bool,string)\":{\"details\":\"Adds a ballot to the election\",\"params\":{\"_description\":\"Ballot description\",\"_ipfsCid\":\"IPFS CID for detailed ballot data\",\"_isMultipleChoice\":\"Whether multiple choices are allowed\",\"_title\":\"Ballot title\"}},\"addElectionMetadata(string,string)\":{\"details\":\"Adds IPFS metadata to the election\",\"params\":{\"_ballotMetadataUri\":\"IPFS URI for ballot metadata\",\"_electionMetadataUri\":\"IPFS URI for election metadata\"}},\"addVoter(address,string,uint256,bytes32)\":{\"details\":\"Adds a single voter to the election\",\"params\":{\"_voteWeight\":\"Weight of the voter's vote\",\"_voterAddress\":\"Voter's wallet address\",\"_voterId\":\"Unique ID for the voter\",\"_voterKeyHash\":\"Hash of the voter's key for authentication\"}},\"addVoters(address[],string[],uint256[],string)\":{\"details\":\"Adds multiple voters to the election in a batch\",\"params\":{\"_ipfsCid\":\"IPFS CID for detailed voter data\",\"_voteWeights\":\"Array of vote weights\",\"_voterAddresses\":\"Array of voter wallet addresses\",\"_voterIds\":\"Array of unique IDs for voters\"}},\"castVote(string,bytes32[],string)\":{\"details\":\"Casts a vote with wallet authentication\",\"params\":{\"_choices\":\"Array of candidate choices (as bytes32 hashes)\",\"_ipfsCid\":\"IPFS CID for vote receipt\",\"_voterId\":\"Voter's ID\"}},\"castVoteWithKey(string,bytes32,bytes32[],string)\":{\"details\":\"Casts a vote with key authentication (without wallet)\",\"params\":{\"_choices\":\"Array of candidate choices (as bytes32 hashes)\",\"_ipfsCid\":\"IPFS CID for vote receipt\",\"_voterId\":\"Voter's ID\",\"_voterKeyHash\":\"Hash of the voter's key\"}},\"castVoteWithPaymaster(string,bytes32,bytes32[],string)\":{\"details\":\"Casts a vote through a paymaster (gasless voting)\",\"params\":{\"_choices\":\"Array of candidate choices (as bytes32 hashes)\",\"_ipfsCid\":\"IPFS CID for vote receipt\",\"_voterId\":\"Voter's ID\",\"_voterKeyHash\":\"Hash of the voter's key\"}},\"changeElectionStatus(uint8)\":{\"details\":\"Changes election status\",\"params\":{\"_newStatus\":\"New status\"}},\"deleteElection()\":{\"details\":\"Deletes an election (soft delete by changing status)\"},\"setElectionUrl(string)\":{\"details\":\"Sets the election URL\",\"params\":{\"_electionUrl\":\"URL for accessing the election\"}},\"setPaymaster(address,bool)\":{\"details\":\"Sets an authorized paymaster\",\"params\":{\"_authorized\":\"Whether the paymaster is authorized\",\"_paymaster\":\"Address of the paymaster\"}}},\"title\":\"IElection\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IElection.sol\":\"IElection\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@account-abstraction/=lib/account-abstraction/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"src/interfaces/IElection.sol\":{\"keccak256\":\"0x8d649ff59a004359e2f1283b9ea34af47935c4fdb539431fd4ecc6bc5caff3bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a4b6941331a52657c1abb774f0baf2661ff31f8c0cd45062d9085384093229d\",\"dweb:/ipfs/QmT4oBYSER9fKBEsRDEeQnNAwjVcgDYaKQzks7i7LMHp6D\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"_title","type":"string"},{"internalType":"string","name":"_description","type":"string"},{"internalType":"bool","name":"_isMultipleChoice","type":"bool"},{"internalType":"string","name":"_ipfsCid","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"addBallot"},{"inputs":[{"internalType":"string","name":"_electionMetadataUri","type":"string"},{"internalType":"string","name":"_ballotMetadataUri","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"addElectionMetadata"},{"inputs":[{"internalType":"address","name":"_voterAddress","type":"address"},{"internalType":"string","name":"_voterId","type":"string"},{"internalType":"uint256","name":"_voteWeight","type":"uint256"},{"internalType":"bytes32","name":"_voterKeyHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"addVoter"},{"inputs":[{"internalType":"address[]","name":"_voterAddresses","type":"address[]"},{"internalType":"string[]","name":"_voterIds","type":"string[]"},{"internalType":"uint256[]","name":"_voteWeights","type":"uint256[]"},{"internalType":"string","name":"_ipfsCid","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"addVoters"},{"inputs":[{"internalType":"string","name":"_voterId","type":"string"},{"internalType":"bytes32[]","name":"_choices","type":"bytes32[]"},{"internalType":"string","name":"_ipfsCid","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"castVote"},{"inputs":[{"internalType":"string","name":"_voterId","type":"string"},{"internalType":"bytes32","name":"_voterKeyHash","type":"bytes32"},{"internalType":"bytes32[]","name":"_choices","type":"bytes32[]"},{"internalType":"string","name":"_ipfsCid","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"castVoteWithKey"},{"inputs":[{"internalType":"string","name":"_voterId","type":"string"},{"internalType":"bytes32","name":"_voterKeyHash","type":"bytes32"},{"internalType":"bytes32[]","name":"_choices","type":"bytes32[]"},{"internalType":"string","name":"_ipfsCid","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"castVoteWithPaymaster"},{"inputs":[{"internalType":"enum IElection.ElectionStatus","name":"_newStatus","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"changeElectionStatus"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteElection"},{"inputs":[{"internalType":"string","name":"_electionUrl","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setElectionUrl"},{"inputs":[{"internalType":"address","name":"_paymaster","type":"address"},{"internalType":"bool","name":"_authorized","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setPaymaster"}],"devdoc":{"kind":"dev","methods":{"addBallot(string,string,bool,string)":{"details":"Adds a ballot to the election","params":{"_description":"Ballot description","_ipfsCid":"IPFS CID for detailed ballot data","_isMultipleChoice":"Whether multiple choices are allowed","_title":"Ballot title"}},"addElectionMetadata(string,string)":{"details":"Adds IPFS metadata to the election","params":{"_ballotMetadataUri":"IPFS URI for ballot metadata","_electionMetadataUri":"IPFS URI for election metadata"}},"addVoter(address,string,uint256,bytes32)":{"details":"Adds a single voter to the election","params":{"_voteWeight":"Weight of the voter's vote","_voterAddress":"Voter's wallet address","_voterId":"Unique ID for the voter","_voterKeyHash":"Hash of the voter's key for authentication"}},"addVoters(address[],string[],uint256[],string)":{"details":"Adds multiple voters to the election in a batch","params":{"_ipfsCid":"IPFS CID for detailed voter data","_voteWeights":"Array of vote weights","_voterAddresses":"Array of voter wallet addresses","_voterIds":"Array of unique IDs for voters"}},"castVote(string,bytes32[],string)":{"details":"Casts a vote with wallet authentication","params":{"_choices":"Array of candidate choices (as bytes32 hashes)","_ipfsCid":"IPFS CID for vote receipt","_voterId":"Voter's ID"}},"castVoteWithKey(string,bytes32,bytes32[],string)":{"details":"Casts a vote with key authentication (without wallet)","params":{"_choices":"Array of candidate choices (as bytes32 hashes)","_ipfsCid":"IPFS CID for vote receipt","_voterId":"Voter's ID","_voterKeyHash":"Hash of the voter's key"}},"castVoteWithPaymaster(string,bytes32,bytes32[],string)":{"details":"Casts a vote through a paymaster (gasless voting)","params":{"_choices":"Array of candidate choices (as bytes32 hashes)","_ipfsCid":"IPFS CID for vote receipt","_voterId":"Voter's ID","_voterKeyHash":"Hash of the voter's key"}},"changeElectionStatus(uint8)":{"details":"Changes election status","params":{"_newStatus":"New status"}},"deleteElection()":{"details":"Deletes an election (soft delete by changing status)"},"setElectionUrl(string)":{"details":"Sets the election URL","params":{"_electionUrl":"URL for accessing the election"}},"setPaymaster(address,bool)":{"details":"Sets an authorized paymaster","params":{"_authorized":"Whether the paymaster is authorized","_paymaster":"Address of the paymaster"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@account-abstraction/=lib/account-abstraction/","@openzeppelin/=lib/openzeppelin-contracts/","account-abstraction/=lib/account-abstraction/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IElection.sol":"IElection"},"evmVersion":"shanghai","libraries":{},"viaIR":true},"sources":{"src/interfaces/IElection.sol":{"keccak256":"0x8d649ff59a004359e2f1283b9ea34af47935c4fdb539431fd4ecc6bc5caff3bd","urls":["bzz-raw://5a4b6941331a52657c1abb774f0baf2661ff31f8c0cd45062d9085384093229d","dweb:/ipfs/QmT4oBYSER9fKBEsRDEeQnNAwjVcgDYaKQzks7i7LMHp6D"],"license":"MIT"}},"version":1},"id":30}